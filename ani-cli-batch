#!/usr/bin/env bash
set -euo pipefail

usage() {
  echo "Usage: $0 <directory>"
  echo "<directory>: Directory containing sub-directories named after anime titles."
}

get_latest_episode() {
  local dir="$1"

  find "$dir" -maxdepth 1 -type f -printf "%f\n" |
    grep -oP 'Episode\s+\K\d+(?=\.[^.]+$)' |
    sort -V |
    tail -n 1 || echo 0
}

check_incomplete() {
  local dir="$1"
  local ep="$2"

  [ -d "$dir" ] || return 0

  # Match "Episode <ep>.<ext>.<ext2>"
  if find "$dir" -maxdepth 1 -type f -printf "%f\n" |
    grep -Ei "Episode[[:space:]]*${ep}\.[^.]+\.[^.]+$" >/dev/null 2>&1; then
    return 0
  fi

  return 1
}

main() {
  anime_dir="$1"
  shopt -s nullglob
  for dir in "$anime_dir"/*/; do
    (
      name=$(basename "$dir")
      echo "Checking anime: $name"
      cd "$dir" || exit

      ep=$(get_latest_episode "$dir")

      if check_incomplete "$dir" "$ep"; then
        echo "Incomplete episode $ep"
        next="$ep"
      else
        next=$((ep + 1))
      fi

      echo "Attempt download episodes from: Episode $next"

      /usr/bin/ani-cli --download --range "${next}-100" "$name" || true
    )

  done
}

if [ -z "$1" ]; then
  usage
  exit 1
else
  main "$1"
fi
